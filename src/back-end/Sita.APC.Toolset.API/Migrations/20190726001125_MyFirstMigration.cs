using System;using Microsoft.EntityFrameworkCore.Migrations;namespace Sita.APC.Toolset.API.Migrations{    public partial class MyFirstMigration : Migration    {        protected override void Up(MigrationBuilder migrationBuilder)        {            migrationBuilder.CreateTable(                name: "BoardingPasses",                columns: table => new                {                    BoardingPassId = table.Column<string>(nullable: false),                    CreatedAt = table.Column<DateTime>(nullable: false),                    BarCodeString = table.Column<string>(nullable: true),                    BarCodeStringLenght = table.Column<string>(nullable: true),                    JulianDateOfIssueOfBoardingPass = table.Column<string>(nullable: true),                    BaggageTagLicencePlateNumber = table.Column<string>(nullable: true),                    FirstNonConsecutiveBaggageTagLicencePlateNumber = table.Column<string>(nullable: true),                    SecondNonConsecutiveBaggageTagLicencePlateNumber = table.Column<string>(nullable: true),                    FieldSizeOfFollowingStructuredMessageUnique = table.Column<string>(nullable: true),                    ConditionalUniqueFieldsSize = table.Column<int>(nullable: false),                    PassengerNameInBoardingPass = table.Column<string>(nullable: true),                    FormatCode = table.Column<string>(nullable: true),                    NumberOfLegs = table.Column<string>(nullable: true),                    PassengerFirstName = table.Column<string>(maxLength: 32, nullable: true),                    PassengerLastName = table.Column<string>(maxLength: 32, nullable: true),                    ElectronicTicketIndicator = table.Column<string>(nullable: true),                    BeginningOfVersionNumber = table.Column<string>(nullable: true),                    VersionNumber = table.Column<string>(nullable: true),                    PassengerDescription = table.Column<string>(nullable: true),                    SourceOfCheckIn = table.Column<string>(nullable: true),                    SourceOfBoardingPassIssuance = table.Column<string>(nullable: true),                    DateOfIssueOfBoardingPass = table.Column<string>(nullable: true),                    DocumentType = table.Column<string>(nullable: true),                    AirlineDesignatorOfBoardingPassIssuer = table.Column<string>(nullable: true)                },                constraints: table =>                {                    table.PrimaryKey("PK_BoardingPasses", x => x.BoardingPassId);                });            migrationBuilder.CreateTable(                name: "Bags",                columns: table => new                {                    BagId = table.Column<string>(nullable: false),                    CreatedAt = table.Column<DateTime>(nullable: false),                    BoardingPassId = table.Column<string>(nullable: false),                    LeadingDigit = table.Column<string>(nullable: true),                    CarrierNumericCode = table.Column<string>(nullable: true),                    CarrierInitialTagNumber = table.Column<string>(nullable: true),                    ConsecutiveBags = table.Column<string>(nullable: true),                    BagTag = table.Column<string>(nullable: true)                },                constraints: table =>                {                    table.PrimaryKey("PK_Bags", x => x.BagId);                    table.ForeignKey(                        name: "FK_Bags_BoardingPasses_BoardingPassId",                        column: x => x.BoardingPassId,                        principalTable: "BoardingPasses",                        principalColumn: "BoardingPassId",                        onDelete: ReferentialAction.Cascade);                });            migrationBuilder.CreateTable(                name: "Legs",                columns: table => new                {                    LegId = table.Column<string>(nullable: false),                    CreatedAt = table.Column<DateTime>(nullable: false),                    BoardingPassId = table.Column<string>(nullable: false),                    JulianDateOfFlight = table.Column<string>(nullable: true),                    LegNumber = table.Column<string>(nullable: true),                    FieldSizeOfFollowingVariableSizeField = table.Column<string>(nullable: true),                    FieldSizeOfFollowingStructuredMessageRepeated = table.Column<string>(nullable: true),                    OperatingCarrierPNRCode = table.Column<string>(nullable: true),                    FromCityAirportCode = table.Column<string>(nullable: true),                    ToCityAirportCode = table.Column<string>(nullable: true),                    OperatingCarrierDesignator = table.Column<string>(nullable: true),                    FlightNumber = table.Column<string>(nullable: true),                    DateOfFlight = table.Column<string>(nullable: true),                    CompartmentCode = table.Column<string>(nullable: true),                    SeatNumber = table.Column<string>(nullable: true),                    CheckInSequenceNumber = table.Column<string>(nullable: true),                    PassengerStatus = table.Column<string>(nullable: true),                    AirlineNumericCode = table.Column<string>(nullable: true),                    DocumentFormSerialNumber = table.Column<string>(nullable: true),                    SelecteeIndicator = table.Column<string>(nullable: true),                    InternationalDocumentationVerification = table.Column<string>(nullable: true),                    MarketingCarrierDesignator = table.Column<string>(nullable: true),                    FrequentFlyerAirlineDesignator = table.Column<string>(nullable: true),                    FrequentFlyerNumber = table.Column<string>(nullable: true),                    IdAdIndicator = table.Column<string>(nullable: true),                    FreeBaggageAllowance = table.Column<string>(nullable: true),                    FastTrack = table.Column<string>(nullable: true),                    ForIndividualAirlineUse = table.Column<string>(nullable: true)                },                constraints: table =>                {                    table.PrimaryKey("PK_Legs", x => x.LegId);                    table.ForeignKey(                        name: "FK_Legs_BoardingPasses_BoardingPassId",                        column: x => x.BoardingPassId,                        principalTable: "BoardingPasses",                        principalColumn: "BoardingPassId",                        onDelete: ReferentialAction.Cascade);                });            migrationBuilder.CreateIndex(                name: "IX_Bags_BoardingPassId",                table: "Bags",                column: "BoardingPassId");            migrationBuilder.CreateIndex(                name: "IX_Legs_BoardingPassId",                table: "Legs",                column: "BoardingPassId");        }        protected override void Down(MigrationBuilder migrationBuilder)        {            migrationBuilder.DropTable(                name: "Bags");            migrationBuilder.DropTable(                name: "Legs");            migrationBuilder.DropTable(                name: "BoardingPasses");        }    }}
