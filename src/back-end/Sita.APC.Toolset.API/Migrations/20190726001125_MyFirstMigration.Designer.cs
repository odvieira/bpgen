// <auto-generated />using System;using Microsoft.EntityFrameworkCore;using Microsoft.EntityFrameworkCore.Infrastructure;using Microsoft.EntityFrameworkCore.Metadata;using Microsoft.EntityFrameworkCore.Migrations;using Microsoft.EntityFrameworkCore.Storage.ValueConversion;using Sita.APC.Toolset.Repository.Database;namespace Sita.APC.Toolset.API.Migrations{    [DbContext(typeof(BoardingPassContext))]    [Migration("20190726001125_MyFirstMigration")]    partial class MyFirstMigration    {        protected override void BuildTargetModel(ModelBuilder modelBuilder)        {#pragma warning disable 612, 618            modelBuilder                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")                .HasAnnotation("Relational:MaxIdentifierLength", 128)                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);            modelBuilder.Entity("Sita.APC.Toolset.Domain.Models.Bag", b =>                {                    b.Property<string>("BagId")                        .ValueGeneratedOnAdd();                    b.Property<string>("BagTag");                    b.Property<string>("BoardingPassId")                        .IsRequired();                    b.Property<string>("CarrierInitialTagNumber");                    b.Property<string>("CarrierNumericCode");                    b.Property<string>("ConsecutiveBags");                    b.Property<DateTime>("CreatedAt");                    b.Property<string>("LeadingDigit");                    b.HasKey("BagId");                    b.HasIndex("BoardingPassId");                    b.ToTable("Bags");                });            modelBuilder.Entity("Sita.APC.Toolset.Domain.Models.BoardingPass", b =>                {                    b.Property<string>("BoardingPassId")                        .ValueGeneratedOnAdd();                    b.Property<string>("AirlineDesignatorOfBoardingPassIssuer");                    b.Property<string>("BaggageTagLicencePlateNumber");                    b.Property<string>("BarCodeString");                    b.Property<string>("BarCodeStringLenght");                    b.Property<string>("BeginningOfVersionNumber");                    b.Property<int>("ConditionalUniqueFieldsSize");                    b.Property<DateTime>("CreatedAt");                    b.Property<string>("DateOfIssueOfBoardingPass");                    b.Property<string>("DocumentType");                    b.Property<string>("ElectronicTicketIndicator");                    b.Property<string>("FieldSizeOfFollowingStructuredMessageUnique");                    b.Property<string>("FirstNonConsecutiveBaggageTagLicencePlateNumber");                    b.Property<string>("FormatCode");                    b.Property<string>("JulianDateOfIssueOfBoardingPass");                    b.Property<string>("NumberOfLegs");                    b.Property<string>("PassengerDescription");                    b.Property<string>("PassengerFirstName")                        .HasMaxLength(32);                    b.Property<string>("PassengerLastName")                        .HasMaxLength(32);                    b.Property<string>("PassengerNameInBoardingPass");                    b.Property<string>("SecondNonConsecutiveBaggageTagLicencePlateNumber");                    b.Property<string>("SourceOfBoardingPassIssuance");                    b.Property<string>("SourceOfCheckIn");                    b.Property<string>("VersionNumber");                    b.HasKey("BoardingPassId");                    b.ToTable("BoardingPasses");                });            modelBuilder.Entity("Sita.APC.Toolset.Domain.Models.Leg", b =>                {                    b.Property<string>("LegId")                        .ValueGeneratedOnAdd();                    b.Property<string>("AirlineNumericCode");                    b.Property<string>("BoardingPassId")                        .IsRequired();                    b.Property<string>("CheckInSequenceNumber");                    b.Property<string>("CompartmentCode");                    b.Property<DateTime>("CreatedAt");                    b.Property<string>("DateOfFlight");                    b.Property<string>("DocumentFormSerialNumber");                    b.Property<string>("FastTrack");                    b.Property<string>("FieldSizeOfFollowingStructuredMessageRepeated");                    b.Property<string>("FieldSizeOfFollowingVariableSizeField");                    b.Property<string>("FlightNumber");                    b.Property<string>("ForIndividualAirlineUse");                    b.Property<string>("FreeBaggageAllowance");                    b.Property<string>("FrequentFlyerAirlineDesignator");                    b.Property<string>("FrequentFlyerNumber");                    b.Property<string>("FromCityAirportCode");                    b.Property<string>("IdAdIndicator");                    b.Property<string>("InternationalDocumentationVerification");                    b.Property<string>("JulianDateOfFlight");                    b.Property<string>("LegNumber");                    b.Property<string>("MarketingCarrierDesignator");                    b.Property<string>("OperatingCarrierDesignator");                    b.Property<string>("OperatingCarrierPNRCode");                    b.Property<string>("PassengerStatus");                    b.Property<string>("SeatNumber");                    b.Property<string>("SelecteeIndicator");                    b.Property<string>("ToCityAirportCode");                    b.HasKey("LegId");                    b.HasIndex("BoardingPassId");                    b.ToTable("Legs");                });            modelBuilder.Entity("Sita.APC.Toolset.Domain.Models.Bag", b =>                {                    b.HasOne("Sita.APC.Toolset.Domain.Models.BoardingPass")                        .WithMany("Bags")                        .HasForeignKey("BoardingPassId")                        .OnDelete(DeleteBehavior.Cascade);                });            modelBuilder.Entity("Sita.APC.Toolset.Domain.Models.Leg", b =>                {                    b.HasOne("Sita.APC.Toolset.Domain.Models.BoardingPass")                        .WithMany("Legs")                        .HasForeignKey("BoardingPassId")                        .OnDelete(DeleteBehavior.Cascade);                });#pragma warning restore 612, 618        }    }}
